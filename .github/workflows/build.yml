name: Auto Build Multi-Platform Installer

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 90
    
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: windows-latest
            platform: win
            artifact_pattern: 'dist/*.exe'
          - os: ubuntu-latest
            platform: linux
            artifact_pattern: 'dist/*.{AppImage,deb,rpm}'
          - os: macos-latest
            platform: mac
            artifact_pattern: 'dist/*.{dmg,zip}'
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - run: npm ci

      - name: Build for ${{ matrix.platform }}
        run: npm run dist:${{ matrix.platform }} --verbose
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CSC_IDENTITY_AUTO_DISCOVERY: false
          CSC_FOR_PULL_REQUEST: true

      - name: List dist directory (Debug)
        run: ls -la dist/

      - uses: actions/upload-artifact@v4
        with:
          name: NoteWizard-${{ matrix.platform }}-${{ github.sha }}
          path: ${{ matrix.artifact_pattern }}
          retention-days: 30
          if-no-files-found: warn

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - run: ls -R artifacts/

      - uses: softprops/action-gh-release@v1
        with:
          name: ${{ github.ref_name }}
          files: artifacts/**/*
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
